0.2.x
2018-unreleased
---


0.2.1
2018.07.11
---
- now requiring pyramid_formencode_classic==0.2.2
-- this inherently requires formencode v2.0.0a1
- now requiring pyramid_debugtoolbar>=4.4
- made a formhandling custom library


0.2.0
2018.05.21
---
- updating some functionality for imports
- some ux fixes
- the nginx status tools now return a better json payload
- adding a settings panel that documents all the config options
- adding more json endpoints for easier commandline work
- private keys can now be marked as default
- SQL Changes
    ALTER TABLE ssl_acme_account_key ADD acme_account_provider_id INTEGER;
    ALTER TABLE ssl_acme_account_key ALTER acme_account_provider_id SET NOT NULL;
    ALTER TABLE ssl_certificate_request RENAME ssl_letsencrypt_account_key_id TO ssl_acme_account_key_id;
    ALTER TABLE ssl_letsencrypt_account_key RENAME TO ssl_acme_account_key;
    ALTER TABLE ssl_operations_object_event RENAME ssl_letsencrypt_account_key_id TO ssl_acme_account_key_id;
    ALTER TABLE ssl_private_key ADD is_default BOOLEAN DEFAULT NULL;
    ALTER TABLE ssl_queue_renewal ADD ssl_server_certificate_id__renewed INT REFERENCES ssl_server_certificate(id);
    ALTER TABLE ssl_queue_renewal ADD timestamp_process_attempt DATETIME;
    ALTER TABLE ssl_queue_renewal ALTER ssl_server_certificate_id DROP NOT NULL;
    ALTER TABLE ssl_server_certificate RENAME ssl_letsencrypt_account_key_id TO ssl_acme_account_key_id;
    ALTER TABLE ssl_server_certificate ADD timestamp_revoked_upstream DATETIME DEFAULT NULL;
    UPDATE ssl_acme_account_key SET acme_account_provider_id = 2;

- SQLITE Check
    PRAGMA table_info(ssl_private_key);
    PRAGMA table_info(ssl_queue_renewal);
	PRAGMA table_info(ssl_certificate_request);
	PRAGMA table_info(ssl_server_certificate);
	PRAGMA table_info(ssl_operations_object_event);

- centralized some json list views into the main views
- centralized json representation into the model. used as_json instead of the encoder hook for now.
- updated CSR to allow multiple types of account/private key uploads
- queue renewals is now using a metadata tag to constantly refresh for the queue, the json endpoint gives results as well
- a fake_boulder.py script is provided for faking interaction, there are some testing options too
- update formerror printing
- allow an "mark revoked" certificate to be unrevoked
- allow an "inactive" certificate to be "mark revoked"
- some light docs for database install
- added `.json` endpoints to core records. this makes commandline browsing via curl easier.
- cert custom renewal - allow to choose existing accounts
- cert queue renewal
- cert quick renewal
- ensure the fqdns on a cert signing; this failed on tests when we stuck a bad cert in.
  because this only happens off the test server, instead of doing a fancy handling of the error we just raise a ValueError and trash the cert
- renamed `SslLetsEncryptAccountKey` to `SslAcmeAccountKey`
- renamed `dbLetsEncryptAccountKey` to `dbAcmeAccountKey`
- renamed `ssl_letsencrypt_account_key` to `ssl_acme_account_key`
- renamed `letsencrypt_account_key` to `acme_account_key`
- `getcreate__SslAcmeAccountKey__by_pem_text` now requires acmeAccountProvider
- add acme-event-log and acme-challenge-log
- private-key/new is now private-key/upload
- account-key/new is now account-key/upload
- account-key/upload now takes letsencrypt jwk data and payloads
- parse letsencrypt account key data for the right auth/provider
- json upload of account keys - single key, all server keys, all keys(all-servers)
- do__CertificateRequest__AcmeAutomated() now requires an AcmeAccountKey. It can not only use a PEM.
- you MUST set `certificate_authority_agreement = 'https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf'` in the settings in order to agree. Otherwise this will fail.
- used pyramid's @reify to memoize some @property items in the model
- the following items now use the actual endpoint for the account:
	acme_register_account
	acme_verify_domains
	acme_sign_certificate
- system should configure based on acme provider, not url
- update account/key authentication system to hit the right endpoint for the actual account
- renamed `getcreate__SslAcmeAccountKey__by_pem_text` to `getcreate__SslAcmeAccountKey`
- adding protocol tracking and control for endpoints
- standardizing api docs and tests
- changed endpoints "/calendar" to "/calendar.json"
- make self-documenting: admin:account_key:focus:mark|json ; fix formerror too
- make self-documenting: admin:domain:focus:mark|json ; fix formerror too
- tests - acme-providers
- tests - acme-events
- function and tests - /domains/search -- is it enrolled, etc?
- added lynx images
- made acme-flow a configuration option
- added `timestamp_revoked_upstream` to SslServerCertificate; set when the cert is reported/officially revoked.
- added config option: queue_domains_max_per_cert
- added config option: queue_domains_min_per_cert
- added config option: queue_domains_use_weekly_key
* audit /admin/queue-domains/process
* audit /admin/queue-renewal/process
- fakeboulder will parse/sign the csr
* acme-challenge-log tracks the account which requested the authz via the acme_log_event item; surfaced the account info on challenges
* install a separate acme-log database
* fqdn renewal in addition to certificate renewal
* the queue-renewals works on fqdns, not just certificates
* account-key auth can happen at any time; also via json
* tests - api_events	
* search for pending validations



0.1.5
2018.01.15
---
- split library functions into multiple files
- changed the database cleanup design to work with current pyramid and pyramid_tm
- explicit objects listed with dbSession.flush()
- updated readme
- better display info on cert/domain pages if you expire nginx
- renamed `nginx.reset_servers` to  `nginx.servers_pool`
- added `nginx.status_path`
- added support for checking nginx status
- added password support to nginx status
- allow no-verify for ssl domains on internal servers via `nginx.servers_pool_allow_invalid`
- changed ports on example ini files
- added .json exceptions for better handling by lua
- more docs on config file options
- cleaning up the admin url config file options, using reified request properties to shortcut logic


0.1.4
2016.11.29
---
-  removed the lua support into a separate project: http://github.com/aptise/peter_sslers-lua-resty , which can be installed via openresty's opm package manager.


0.1.3
---
-  replaced `datetime.datetime.now()` with `datetime.datetime.utcnow()`

0.1.2
---
-  Added `example_` prefix to .ini files


0.1.1
---
-  Working on the domain routes


0.1
---
-  Added a request param `request.api_context` and replaced passing around the raw dbSession with the context object
	At this point the context object merely contains a dbSession, timestamp, and some information about the current api transactions
	Any object that implements this interface can be used.


0.0
---
-  Initial version
