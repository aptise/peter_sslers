Not Finished Yet
===============
asap tasks
---------------

* audit apidocs
	certificate/{ID}/renew/custom.json better self-docs
* ensure self-documenting endpoints POST on mako
    @view_config(route_name='admin:queue_domains:process', renderer=None)
    @view_config(route_name='admin:queue_domains:process|json', renderer='json')
    def queue_domain_process(self):

tests
	curl http://127.0.0.1:7201/.well-known/admin/queue-domains/process.json

	

* build authorization deactivate tool
* migrate cert_subject hash and tracking to SAN
* search expiring soon | note: isn't this the `/certificates/expiring` view?
* log full actual results; if a queue fails log that data too
* CSR should have domain[0] as subject if there are multiple domains | note: letsencrypt does this at the server level?
* associate all objects to one another when imported; only some objects are currently associated
* queue_renewal_focus_mark - return JSON
* log pending validations
* tests - api_events	




deferred tasks
---------------
* create tool for exporting and deleting the logs
* finish rate limit calendars
* upload CERT/Chains for 'flow' CSR | once the flow is finished, upload a cert into it.
* there should be a queue for multi-domain certificates too.  ie, request a cert for A+B+C, which could remove items from the domain queue
* the queue-renewals update script could work on fqdns, not just certificates
* add "operations" and "endpoints" to `.json` endpoints of core records. this should make commandline operations via curl easier.
* deprecate the AcmeFlow helper (preferred) OR give it json endpoints.

Long Term Questions:
==================================
* decouple from openssl and use pure-python methods
	- using the openssl was initial decision to have fewest python requirements possible
	- if that happens, should requests be used?

Additional Test coverage needed for
-----------------------------------
* /admin/certificate/5/renew/custom
* /api/queue-renewals/process
* /admin/private-key/7?operation=mark&action=default&result=success
* queue_domains__process | /admin/queue-domains/process
