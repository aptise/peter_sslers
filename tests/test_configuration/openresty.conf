# force `runner`, which is what github actions will run the workflow as
user runner;

worker_processes  1;
events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

    ## logging
    access_log /home/runner/work/peter_sslers/peter_sslers/_data_/nginx/access.log;
    error_log /home/runner/work/peter_sslers/peter_sslers/_data_/nginx/error.log debug;

    sendfile        on;
    keepalive_timeout  70;
    gzip  on;
    server_tokens  off;
    rewrite_log  on;
    client_max_body_size  10m;

    ## lua
    # initialize the cert_cache to a size
    # it will be accessed via `nginx.shared.cert_cache`
    lua_shared_dict  cert_cache 100k;
    lua_code_cache  on;
    init_by_lua_block {
        require "resty.core"
        local ssl_certhandler = require "resty.peter_sslers"
        ssl_certhandler.initialize()
    }
    init_worker_by_lua_block {
        require "resty.core"
        local ssl_certhandler = require "resty.peter_sslers"
        -- cert_cache_duration, lru_cache_duration, lru_maxitems
        ssl_certhandler.initialize_worker(600, 60, 200)
    }

    server  {
        listen  443 ssl;
        server_name  localhost;

        access_log  /home/runner/work/peter_sslers/peter_sslers/_data_/nginx/https_localhost-access.log;
        error_log  /home/runner/work/peter_sslers/peter_sslers/_data_/nginx/https_localhost-error.log debug;


        include  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/openresty_macro_ssl.conf ;
        # use the pebble cert, because python is not happy with selfsigned certs
        # make sure the ca_bundle is the minica root one directory above
        ssl_certificate  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/pebble/test/certs/localhost/cert.pem ;
        ssl_certificate_key  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/pebble/test/certs/localhost/key.pem ;

        location  /.peter_sslers {
            ## auth setup
            auth_basic  "peter_sslers";
            auth_basic_user_file  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/peter_sslers.htpasswd;

            ## enable a cache expiry route
            location  /.peter_sslers/nginx/shared_cache/expire  {
                content_by_lua_block  {
                    -- requirements
                    local ssl_certhandler = require "resty.peter_sslers"

                    -- alias functions
                    local ssl_certhandler_expire = ssl_certhandler.expire_ssl_certs
                    ssl_certhandler_expire()
                }
            }

            ## enable a status route
            location  /.peter_sslers/nginx/shared_cache/status  {
                content_by_lua_block  {
                    -- requirements
                    local ssl_certhandler = require "resty.peter_sslers"

                    -- alias functions
                    local ssl_certhandler_status = ssl_certhandler.status_ssl_certs
                    ssl_certhandler_status()
                }
            }
        }
    }


    ## is failover needed?
    server  {
        listen  443 ssl;
        server_name  example.com;

        access_log  /home/runner/work/peter_sslers/peter_sslers/_data_/nginx/https_default-access.log;
        error_log  /home/runner/work/peter_sslers/peter_sslers/_data_/nginx/https_default-error.log debug;

        include  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/openresty_macro_ssl.conf ;

        ## this is our default
        # use the pebble cert, because python is not happy with selfsigned certs
        # make sure the ca_bundle is the minica root one directory above
        ssl_certificate  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/pebble/test/certs/localhost/cert.pem ;
        ssl_certificate_key  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/pebble/test/certs/localhost/key.pem ;

        ssl_certificate_by_lua_block  {
            -- requirements
            local ssl_certhandler = require "resty.peter_sslers"

            -- alias functions
            local ssl_certhandler_set = ssl_certhandler.set_ssl_certificate

            -- nil to disable
            local redis_strategy = 1  
            local fallback_server = 'http://127.0.0.1:7201/.well-known/peter_sslers'
            local enable_autocert = 1
            ssl_certhandler_set(redis_strategy, fallback_server, enable_autocert)
        }
    }

}
