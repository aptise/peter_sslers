worker_processes  1;
events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

    ## logging
    access_log  /home/runner/work/peter_sslers/logs/openresty/access-https.log;
    error_log  /home/runner/work/peter_sslers/logs/openresty/error-https.log notice;

    sendfile        on;
    keepalive_timeout  70;
    gzip  on;
    server_tokens  off;
    rewrite_log  on;
    client_max_body_size  10m;

    ## lua
    # initialize the cert_cache to a size
    # it will be accessed via `nginx.shared.cert_cache`
    lua_shared_dict  cert_cache 100k;
    lua_code_cache  on;
    init_by_lua_block {
        require "resty.core"
        local ssl_certhandler = require "peter_sslers.ssl_certhandler"
        ssl_certhandler.initialize()
    }
    init_worker_by_lua_block {
        require "resty.core"
        local ssl_certhandler = require "peter_sslers.ssl_certhandler"
        -- cert_cache_duration, lru_cache_duration, lru_maxitems
        ssl_certhandler.initialize_worker(600, 60, 200)
    }

    ## Our FAILOVER SECURE server responds to every name
    server  {
        listen  443 default_server;
        server_name  example.com;

        location  /.peter_sslers {
            ## auth setup
            auth_basic  "peter_sslers";
            auth_basic_user_file  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/peter_sslers.htpasswd;

            ## enable a cache expiry route
            location  /.peter_sslers/nginx/shared_cache/expire  {
                content_by_lua_block  {
                    -- requirements
                    local ssl_certhandler = require "peter_sslers.ssl_certhandler"

                    -- alias functions
                    local ssl_certhandler_expire = ssl_certhandler.expire_ssl_certs
                    ssl_certhandler_expire()
                }
            }

            ## enable a status route
            location  /.peter_sslers/nginx/shared_cache/status  {
                content_by_lua_block  {
                    -- requirements
                    local ssl_certhandler = require "peter_sslers.ssl_certhandler"

                    -- alias functions
                    local ssl_certhandler_status = ssl_certhandler.status_ssl_certs
                    ssl_certhandler_status()
                }
            }
        }

        ssl_certificate_by_lua_block  {
            -- requirements
            local ssl_certhandler = require "peter_sslers.ssl_certhandler"

            -- alias functions
            local ssl_certhandler_set = ssl_certhandler.set_ssl_certificate

            -- nil to disable
            local redis_strategy = 1  
            local fallback_server = 'http://127.0.0.1:7201/.well-known/admin'
            local enable_autocert = 1
            ssl_certhandler_set(redis_strategy, fallback_server, enable_autocert)
        }

        ## SSL controls
        ssl  on;

        ssl_session_cache  shared:SSL:10m;
        ssl_session_timeout  1d;

        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers  'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers  on;

        ssl_stapling  on;
        ssl_stapling_verify  on;
        
        add_header  Access-Control-Allow-Origin http://127.0.0.1;
        ## HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header  Strict-Transport-Security max-age=15768000;

        ## this is our default
        ssl_certificate  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/ssl_default_fullchain.pem ;
        ssl_certificate_key  /home/runner/work/peter_sslers/peter_sslers/tests/test_configuration/ssl_default_privkey.pem ;
    }
}
