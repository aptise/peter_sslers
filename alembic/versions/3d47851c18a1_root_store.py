"""root_store

Revision ID: 3d47851c18a1
Revises: 83d46ba9e38f
Create Date: 2025-08-28 23:50:58.561999

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import expression


# edited template
# import peter_sslers

# revision identifiers, used by Alembic.
revision: str = "3d47851c18a1"
down_revision: Union[str, Sequence[str], None] = "83d46ba9e38f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("root_store", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "is_cert_utils_discovery",
                sa.Boolean(),
                nullable=False,
                server_default=expression.false(),
                default=True,
            )
        )

    op.drop_index("uidx_root_store_version")
    with op.batch_alter_table("root_store_version", schema=None) as batch_op:
        batch_op.alter_column(
            "version_string",
            new_column_name="version_min",
            existing_type=sa.VARCHAR(length=64),
            new_type=sa.VARCHAR(length=255),
            nullable=False,
        )
        batch_op.add_column(
            sa.Column(
                "version_max", sa.VARCHAR(length=255), nullable=True, default=None
            )
        )
        batch_op.add_column(
            sa.Column(
                "version_notes", sa.VARCHAR(length=255), nullable=True, default=None
            )
        )
        batch_op.add_column(
            sa.Column(
                "is_cert_utils_discovery",
                sa.Boolean(),
                nullable=False,
                server_default=expression.false(),
                default=True,
            )
        )
    op.execute(
        """CREATE UNIQUE INDEX uidx_root_store_version ON root_store_version (root_store_id, lower(version_min));"""
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("uidx_root_store_version")
    with op.batch_alter_table("root_store_version", schema=None) as batch_op:
        batch_op.alter_column(
            "version_min",
            new_column_name="version_string",
            existing_type=sa.VARCHAR(length=255),
            new_type=sa.VARCHAR(length=64),
            nullable=False,
        )
        batch_op.drop_column("is_cert_utils_discovery")
        batch_op.drop_column("version_notes")
        batch_op.drop_column("version_max")
    op.execute(
        """CREATE UNIQUE INDEX uidx_root_store_version ON root_store_version (root_store_id, lower(version_string));"""
    )

    with op.batch_alter_table("root_store", schema=None) as batch_op:
        batch_op.drop_column("is_cert_utils_discovery")

    # ### end Alembic commands ###
