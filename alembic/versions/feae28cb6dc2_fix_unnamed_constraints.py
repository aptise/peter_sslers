"""name_contraints

Revision ID: feae28cb6dc2
Revises: 0c3414079bfe
Create Date: 2025-08-23 11:49:59.010559

"""

from typing import Sequence, Union

from alembic import op

# import sqlalchemy as sa


# edited template
# import peter_sslers

# revision identifiers, used by Alembic.
revision: str = "feae28cb6dc2"
down_revision: Union[str, Sequence[str], None] = "0c3414079bfe"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    def create_named_constraints():

        with op.batch_alter_table("acme_account", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_account_account_url"), ["account_url"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_account_account_url_sha256"), ["account_url_sha256"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_account_name"), ["name"]
            )

        with op.batch_alter_table("acme_authorization", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_authorization_authorization_url"),
                ["authorization_url"],
            )

        with op.batch_alter_table("acme_challenge", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_challenge_challenge_url"), ["challenge_url"]
            )

        with op.batch_alter_table("acme_order", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_order_order_url"), ["order_url"]
            )

        with op.batch_alter_table("acme_server", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_server_directory_url"), ["directory_url"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_server_name"), ["name"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_acme_server_server"), ["server"]
            )

        with op.batch_alter_table("certificate_ca", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_ca_cert_pem"), ["cert_pem"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_ca_cert_pem_md5"), ["cert_pem_md5"]
            )

        with op.batch_alter_table("certificate_ca_chain", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_ca_chain_chain_pem"), ["chain_pem"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_ca_chain_chain_pem_md5"), ["chain_pem_md5"]
            )

        with op.batch_alter_table("certificate_ca_preference", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_ca_preference_certificate_ca_id"),
                ["certificate_ca_id"],
            )

        with op.batch_alter_table(
            "certificate_ca_preference_policy", schema=None
        ) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_ca_preference_policy_name"), ["name"]
            )

        with op.batch_alter_table("certificate_signed", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_signed_cert_pem"), ["cert_pem"]
            )
            batch_op.create_unique_constraint(
                batch_op.f("uq_certificate_signed_cert_pem_md5"), ["cert_pem_md5"]
            )

        with op.batch_alter_table("enrollment_factory", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_enrollment_factory_name"), ["name"]
            )

        with op.batch_alter_table("renewal_configuration", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_renewal_configuration_label"), ["label"]
            )

        with op.batch_alter_table("system_configuration", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_system_configuration_name"), ["name"]
            )

        with op.batch_alter_table("unique_fqdn_set", schema=None) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f("uq_unique_fqdn_set_domain_ids_string"),
                ["domain_ids_string"],
            )

        with op.batch_alter_table(
            "uniquely_challenged_fqdn_set", schema=None
        ) as batch_op:
            batch_op.create_unique_constraint(
                batch_op.f(
                    "uq_uniquely_challenged_fqdn_set_domain_challenges_serialized"
                ),
                ["domain_challenges_serialized"],
            )

    def drop_named_constraints():

        with op.batch_alter_table(
            "uniquely_challenged_fqdn_set", schema=None
        ) as batch_op:
            batch_op.drop_constraint(
                batch_op.f(
                    "uq_uniquely_challenged_fqdn_set_domain_challenges_serialized"
                ),
                type_="unique",
            )

        with op.batch_alter_table("unique_fqdn_set", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_unique_fqdn_set_domain_ids_string"), type_="unique"
            )

        with op.batch_alter_table("system_configuration", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_system_configuration_name"), type_="unique"
            )

        with op.batch_alter_table("renewal_configuration", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_renewal_configuration_label"), type_="unique"
            )

        with op.batch_alter_table("enrollment_factory", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_enrollment_factory_name"), type_="unique"
            )

        with op.batch_alter_table("certificate_signed", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_signed_cert_pem_md5"), type_="unique"
            )
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_signed_cert_pem"), type_="unique"
            )

        with op.batch_alter_table(
            "certificate_ca_preference_policy", schema=None
        ) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_ca_preference_policy_name"), type_="unique"
            )

        with op.batch_alter_table("certificate_ca_preference", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_ca_preference_certificate_ca_id"),
                type_="unique",
            )

        with op.batch_alter_table("certificate_ca_chain", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_ca_chain_chain_pem_md5"), type_="unique"
            )
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_ca_chain_chain_pem"), type_="unique"
            )

        with op.batch_alter_table("certificate_ca", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_ca_cert_pem_md5"), type_="unique"
            )
            batch_op.drop_constraint(
                batch_op.f("uq_certificate_ca_cert_pem"), type_="unique"
            )

        with op.batch_alter_table("acme_server", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_acme_server_server"), type_="unique"
            )
            batch_op.drop_constraint(batch_op.f("uq_acme_server_name"), type_="unique")
            batch_op.drop_constraint(
                batch_op.f("uq_acme_server_directory_url"), type_="unique"
            )

        with op.batch_alter_table("acme_order", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_acme_order_order_url"), type_="unique"
            )

        with op.batch_alter_table("acme_challenge", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_acme_challenge_challenge_url"), type_="unique"
            )

        with op.batch_alter_table("acme_authorization", schema=None) as batch_op:
            batch_op.drop_constraint(
                batch_op.f("uq_acme_authorization_authorization_url"), type_="unique"
            )

        with op.batch_alter_table("acme_account", schema=None) as batch_op:
            batch_op.drop_constraint(batch_op.f("uq_acme_account_name"), type_="unique")
            batch_op.drop_constraint(
                batch_op.f("uq_acme_account_account_url_sha256"), type_="unique"
            )
            batch_op.drop_constraint(
                batch_op.f("uq_acme_account_account_url"), type_="unique"
            )

    create_named_constraints()
    drop_named_constraints()
    create_named_constraints()

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass

    # ### end Alembic commands ###
