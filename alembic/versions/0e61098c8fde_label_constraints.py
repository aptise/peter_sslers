"""label_constraints

Revision ID: 0e61098c8fde
Revises: c83b22aa7aa3
Create Date: 2025-08-27 16:57:49.997034

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# edited template

# revision identifiers, used by Alembic.
revision: str = "0e61098c8fde"
down_revision: Union[str, Sequence[str], None] = "c83b22aa7aa3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("enrollment_factory", schema=None) as batch_op:
        batch_op.alter_column(
            "label_template",
            existing_type=sa.VARCHAR(length=64),
            nullable=False,
            server_default="{DOMAIN}",
        )

    with op.batch_alter_table("renewal_configuration", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("uq_renewal_configuration_label"), type_="unique"
        )
        batch_op.create_unique_constraint(
            "unique_rc_label", ["label", "enrollment_factory_id__via"]
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("renewal_configuration", schema=None) as batch_op:
        batch_op.drop_constraint("unique_rc_label", type_="unique")
        batch_op.create_unique_constraint(
            batch_op.f("uq_renewal_configuration_label"), ["label"]
        )

    with op.batch_alter_table("enrollment_factory", schema=None) as batch_op:
        batch_op.alter_column(
            "label_template", existing_type=sa.VARCHAR(length=64), nullable=True
        )
    # ### end Alembic commands ###
